---
import type { MascotMessage } from '../types/mascot';

interface Props {
  messages?: MascotMessage[];
}

const { messages = [] } = Astro.props;

// Если сообщений нет, не рендерим компонент
if (!messages.length) {
  return null;
}
---

<div class="frontie-mascot">
    <div class="frontie-speech" id="frontieSpeech">
      {messages.map((message, index) => (
        <div class="message" style={`--index: ${index}`}>{message.text}</div>
      ))}
    </div>
    <img
      src="/images/frontie/frontie-small.webp"
      alt="Фронти - маскот дайджеста"
      width="200"
      height="200"
      class="frontie-image"
    />
  </div>

  <style>
    .frontie-mascot {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 100;
      transition: transform 0.3s ease;
      animation: slideIn 0.5s ease-out forwards;
      animation-timeline: scroll();
      animation-range: 100px 300px;
      opacity: 0;
      transform: translateX(100%);
    }

    .frontie-speech {
      position: absolute;
      bottom: 100%;
      right: 0;
      background: #f8f9fa;
      padding: 8px 12px;
      border-radius: 8px;
      margin-bottom: 8px;
      font-size: 14px;
      opacity: 0;
      transform: translateY(10px);
      animation: speechAppear 0.3s ease-out forwards;
      animation-timeline: scroll();
      animation-range: 400px 600px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      min-width: 200px;
      min-height: 40px;
      color: #1a1a1a;
    }

    .message {
      position: absolute;
      opacity: 0;
      transition: opacity 0.3s ease;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      text-align: center;
      color: inherit;
      animation: showMessage linear forwards;
      animation-timeline: scroll();
      animation-range: calc(var(--index) * 10%) calc((var(--index) + 1) * 10%);
    }

    @keyframes showMessage {
      0%, 100% {
        opacity: 0;
      }
      10%, 90% {
        opacity: 1;
      }
    }

    @keyframes speechAppear {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes slideIn {
      from {
        opacity: 0;
        transform: translateX(100%);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    .frontie-mascot:hover {
      transform: scale(1.1);
    }

    @media (max-width: 768px) {
      .frontie-mascot {
        display: none;
      }
    }
  </style>

  <script>
    // Показываем сообщения по очереди при скролле
    const messages = document.querySelectorAll<HTMLElement>('.message');
    let currentIndex = 0;

    function showNextMessage() {
      messages.forEach(msg => msg.style.opacity = '0');
      messages[currentIndex].style.opacity = '1';
      currentIndex = (currentIndex + 1) % messages.length;
    }

    // Показываем следующее сообщение каждые 3 секунды
    setInterval(showNextMessage, 3000);

    // Также показываем следующее сообщение при скролле
    let lastScrollY = window.scrollY;
    window.addEventListener('scroll', () => {
      if (Math.abs(window.scrollY - lastScrollY) > 100) {
        showNextMessage();
        lastScrollY = window.scrollY;
      }
    });
  </script>
