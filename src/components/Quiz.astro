---
interface Props {
  questions: {
    question: string;
    options: string[];
    correctAnswer: number;
  }[];
}

const { questions } = Astro.props;
---

<div class="quiz-container">
  <form id="quiz-form" class="quiz-form">
    {questions.map((q, questionIndex) => (
      <div class="question-block">
        <h3 class="question-text">{q.question}</h3>
        <div class="options-container">
          {q.options.map((option, optionIndex) => (
            <label class="option-label">
              <input
                type="radio"
                name={`question-${questionIndex}`}
                value={optionIndex}
                required
              />
              <span class="option-text">{option}</span>
            </label>
          ))}
        </div>
      </div>
    ))}
    <button type="submit" class="submit-button">Проверить ответы</button>
  </form>
</div>

<style>
  .quiz-container {
    margin: 2rem auto;
    padding: 1rem;
    background: #f8f9fa;
    border-radius: 8px;
  }

  .question-block {
    margin-bottom: 2rem;
  }

  .question-text {
    font-size: 1.2rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .options-container {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }

  .option-label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .option-label.correct {
    background-color: #d4edda;
    border: 1px solid #c3e6cb;
  }

  .option-label.incorrect {
    background-color: #f8d7da;
    border: 1px solid #f5c6cb;
  }

  .option-label:hover {
    background-color: #e9ecef;
  }

  .submit-button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 0.8rem 1.5rem;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s;
  }

  .submit-button:hover {
    background-color: #0056b3;
  }

  .quiz-results {
    display: none;
  }
</style>

<script define:vars={{ questions }}>
  const form = document.getElementById('quiz-form');

  if (form) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      const formData = new FormData(form);

      for (let i = 0; i < questions.length; i++) {
        const selectedAnswer = parseInt(formData.get(`question-${i}`));
        const questionBlock = form.querySelector(`[name="question-${i}"]`).closest('.question-block');
        const allOptions = questionBlock.querySelectorAll('.option-label');

        allOptions.forEach(option => {
          option.classList.remove('correct', 'incorrect');
        });

        allOptions[questions[i].correctAnswer].classList.add('correct');

        if (selectedAnswer !== questions[i].correctAnswer) {
          allOptions[selectedAnswer].classList.add('incorrect');
        }
      }
    });
  }
</script>
